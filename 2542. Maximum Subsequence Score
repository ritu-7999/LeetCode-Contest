class Solution {
    public long maxScore(int[] nums1, int[] nums2, int k) {
        long max=0;
        int n=nums1.length;
        
        int[][] x=new int[nums1.length][];
        for(int i=0;i<nums1.length;i++){
            x[i]=new int[]{nums2[i],nums1[i]};
    
        }
       Arrays.sort(x, (x1, y) -> {
				if (x1[0] != y[0]) return x1[0] - y[0];
				return (x1[1] - y[1]);
			});
        long sum=0;
        PriorityQueue<Integer>p=new PriorityQueue<>();
        for(int i=n-1;i>=0;i--){
            p.add(x[i][1]);
            sum+=x[i][1];
            if(p.size()>k){
                sum-=p.poll();
            }
            if(p.size()==k){
                max=Math.max(max,sum*x[i][0]);
            }
            
        }
        return max;
    }
}
